{"version":3,"sources":["webpack://ReactResponsiveSelect/webpack/universalModuleDefinition","webpack://ReactResponsiveSelect/webpack/bootstrap","webpack://ReactResponsiveSelect/./src/constants/actionTypes.ts","webpack://ReactResponsiveSelect/./node_modules/react/index.js","webpack://ReactResponsiveSelect/./node_modules/singleline-next/lib/index.js","webpack://ReactResponsiveSelect/./src/lib/isEqual.ts","webpack://ReactResponsiveSelect/./src/lib/nextValidIndex.ts","webpack://ReactResponsiveSelect/./src/lib/eventHandlers/handleAlphaNumerical.ts","webpack://ReactResponsiveSelect/./src/lib/onChangeBroadcasters/index.ts","webpack://ReactResponsiveSelect/./src/lib/eventHandlers/handleClick.ts","webpack://ReactResponsiveSelect/./src/lib/eventHandlers/handleEnterPressed.ts","webpack://ReactResponsiveSelect/./src/lib/eventHandlers/handleKeyUpOrDownPressed.ts","webpack://ReactResponsiveSelect/./src/reducers/initialState.ts","webpack://ReactResponsiveSelect/./src/ReactResponsiveSelect.tsx","webpack://ReactResponsiveSelect/./node_modules/react/cjs/react.production.min.js","webpack://ReactResponsiveSelect/./node_modules/object-assign/index.js","webpack://ReactResponsiveSelect/./src/lib/eventHandlers/index.ts","webpack://ReactResponsiveSelect/./src/lib/eventHandlers/handleBlur.ts","webpack://ReactResponsiveSelect/./src/lib/onChangeBroadcasters/multiSelectBroadcastChange.ts","webpack://ReactResponsiveSelect/./src/lib/onChangeBroadcasters/singleSelectBroadcastChange.ts","webpack://ReactResponsiveSelect/./src/lib/containsClassName.ts","webpack://ReactResponsiveSelect/./src/lib/eventHandlers/handleKeyEvent.ts","webpack://ReactResponsiveSelect/./src/constants/keyCodes.ts","webpack://ReactResponsiveSelect/./src/lib/preventDefaultForKeyCodes.ts","webpack://ReactResponsiveSelect/./src/lib/getNextIndex.ts","webpack://ReactResponsiveSelect/./src/lib/eventHandlers/handleTouchMove.ts","webpack://ReactResponsiveSelect/./src/lib/eventHandlers/handleTouchStart.ts","webpack://ReactResponsiveSelect/./src/components/MultiSelect.tsx","webpack://ReactResponsiveSelect/./src/components/MultiSelectOption.tsx","webpack://ReactResponsiveSelect/./src/components/SingleSelect.tsx","webpack://ReactResponsiveSelect/./src/components/SingleSelectOption.tsx","webpack://ReactResponsiveSelect/./src/lib/getCustomLabelText.ts","webpack://ReactResponsiveSelect/./src/reducers/reducer.ts","webpack://ReactResponsiveSelect/./src/reducers/lib/index.ts","webpack://ReactResponsiveSelect/./src/reducers/lib/addMultiSelectIndex.ts","webpack://ReactResponsiveSelect/./src/reducers/lib/addMultiSelectOption.ts","webpack://ReactResponsiveSelect/./src/reducers/lib/getInitialMultiSelectOption.ts","webpack://ReactResponsiveSelect/./src/reducers/lib/getMultiSelectInitialSelectedOptions.ts","webpack://ReactResponsiveSelect/./src/reducers/lib/getMultiSelectSelectedValueIndexes.ts","webpack://ReactResponsiveSelect/./src/reducers/lib/getSelectedValueIndex.ts","webpack://ReactResponsiveSelect/./src/reducers/lib/getSingleSelectSelectedOption.ts","webpack://ReactResponsiveSelect/./src/reducers/lib/mergeIsAlteredState.ts","webpack://ReactResponsiveSelect/./src/reducers/lib/removeMultiSelectIndex.ts","webpack://ReactResponsiveSelect/./src/reducers/lib/removeMultiSelectOption.ts","webpack://ReactResponsiveSelect/./src/reducers/lib/resetMultiSelectState.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","INITIALISE","UPDATE_VIA_PROPS","SET_IS_DRAGGING","SET_OPTIONS_PANEL_OPEN","SET_OPTIONS_PANEL_CLOSED","SET_SINGLESELECT_OPTIONS","SET_MULTISELECT_OPTIONS","SET_OPTIONS_PANEL_CLOSED_NO_SELECTION","SET_OPTIONS_PANEL_CLOSED_ONBLUR","SET_NEXT_SELECTED_INDEX","SET_NEXT_SELECTED_INDEX_ALPHA_NUMERIC","default","multiLineString","noSpaces","delimiter","replace","trim","skipCircularReference","cache","indexOf","push","isEqual","a","b","JSON","stringify","nextValidIndex","state","nextPotentialSelectionIndex","options","possibleOptionIndexes","reduce","acc","option","index","optHeader","indexNotFocusable","length","timeoutActive","actionTypes","stringMatch","handleAlphaNumerical","_a","event","RRSClassRef","disabled","setTimeout","foundIndexes","text","toLowerCase","updateState","type","multiSelectBroadcastChange_1","multiSelectBroadcastChange","singleSelectBroadcastChange_1","singleSelectBroadcastChange","containsClassName_1","handleClick","multiselect","isOptionsPanelOpen","isDragging","preventDefault","containsClassName","target","parseFloat","getAttribute","focusButton","newState","handleEnterPressed","props","stopPropagation","onSubmit","getNextIndex_1","handleKeyUpOrDownPressed","getNextIndex","initialState","altered","title","backButtonName","singleSelectInitialIndex","singleSelectSelectedIndex","singleSelectSelectedOption","multiSelectInitialSelectedIndexes","multiSelectSelectedOptions","multiSelectSelectedIndexes","React","eventHandlers_1","onChangeBroadcasters_1","MultiSelect_1","SingleSelect_1","getCustomLabelText_1","initialState_1","isEqual_1","reducer_1","singleline_next_1","ReactResponsiveSelect","_super","_this","onHandleKeyEvent","e","handleKeyEvent","onHandleTouchStart","handleTouchStart","onHandleTouchMove","handleTouchMove","onHandleClick","onHandleBlur","handleBlur","reducer","firstLoad","__extends","componentDidMount","noSelectionLabel","selectedValue","selectedValues","UNSAFE_componentWillReceiveProps","nextProps","__assign","componentDidUpdate","prevProps","prevState","onChange","Boolean","action","callback","onListen","nextState","setState","some","actionType","el","selectBox","querySelector","focus","render","prefix","caretIcon","_b","hasOptHeaders","customLabelText","getCustomLabelText","createElement","data-testid","data-name","className","ref","tabIndex","onKeyDown","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onBlur","MultiSelect","selectBoxRef","SingleSelect","Component","k","for","q","u","v","w","x","y","z","aa","ba","A","iterator","B","arguments","encodeURIComponent","g","h","f","Error","framesToPop","ca","C","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","D","E","context","refs","updater","F","G","isReactComponent","forceUpdate","H","constructor","isPureReactComponent","I","current","J","K","L","__self","__source","M","children","Array","defaultProps","$$typeof","_owner","N","O","P","Q","pop","result","keyPrefix","func","count","R","U","S","T","isArray","next","done","keys","join","=",":","escape","toString","ea","fa","V","da","W","X","Children","map","forEach","toArray","only","createRef","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","version","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","assign","Z","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","String","getOwnPropertyNames","test2","fromCharCode","test3","split","letter","err","shouldUseNative","source","from","symbols","to","val","TypeError","toObject","handleAlphaNumerical_1","handleBlur_1","handleClick_1","handleEnterPressed_1","handleKeyEvent_1","handleKeyUpOrDownPressed_1","handleTouchMove_1","handleTouchStart_1","isOutsideSelectBox","contains","document","activeElement","currOptions","fn","prevOptions","currOption","currValue","prevValue","element","classNameStr","keyCodes_1","preventDefaultForKeyCodes_1","preventDefaultForKeyCodes","keyCodes","ENTER","SPACE","ESCAPE","UP","DOWN","test","keyCode","TAB","nextValidIndex_1","MultiSelectOption_1","optionsButton","optionsContainer","getAriaLabel","selectedOptionsLength","optHeaderLabel","role","aria-disabled","aria-haspopup","aria-expanded","aria-controls","aria-label","id","aria-labelledby","markup","textContent","MultiSelectOption","optionsContainerRef","optionRef","getScrollOffset","Math","ceil","getBoundingClientRect","height","scrollDiff","top","scrollOffset","scroll","floor","scrollTop","isDisabled","isSelected","aria-checked","aria-live","data-key","SingleSelectOption_1","optionsPanelJustClosed","getCustomLabel","getDefaultLabel","console","log","onClick","SingleSelectOption","image","src","dangerouslySetInnerHTML","__html","customLabelRenderer","lib_1","initialSelectedIndex","getSelectedValueIndex","initialSelectedIndexes","getMultiSelectSelectedValueIndexes","getSingleSelectSelectedOption","getMultiSelectInitialSelectedOptions","mergeIsAlteredState","isFirstOptionInListSelected","shouldDeselectAllAndSelectFirstOption","shouldDeselectFirstOptionAndSelectRequestedOption","getInitialMultiSelectOption","resetMultiSelectState","actionOptionIndexAdjusted","indexLocation","addMultiSelectIndex","removeMultiSelectIndex","addMultiSelectOption","removeMultiSelectOption","addMultiSelectIndex_1","addMultiSelectOption_1","getInitialMultiSelectOption_1","getMultiSelectInitialSelectedOptions_1","getMultiSelectSelectedValueIndexes_1","getSelectedValueIndex_1","getSingleSelectSelectedOption_1","mergeIsAlteredState_1","removeMultiSelectIndex_1","removeMultiSelectOption_1","resetMultiSelectState_1","concat","findClosestValidOption","selectedOptionsToReturn","filter","possibleOptions","emptyResult","selected","selectionIndex","closestValidOption","isAltered","slice"],"mappings":"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","file":"ReactResponsiveSelect.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ReactResponsiveSelect\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactResponsiveSelect\"] = factory();\n\telse\n\t\troot[\"ReactResponsiveSelect\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","export const INITIALISE = 'INITIALISE';\nexport const UPDATE_VIA_PROPS = 'UPDATE_VIA_PROPS';\nexport const SET_IS_DRAGGING = 'SET_IS_DRAGGING';\nexport const SET_OPTIONS_PANEL_OPEN = 'SET_OPTIONS_PANEL_OPEN';\nexport const SET_OPTIONS_PANEL_CLOSED = 'SET_OPTIONS_PANEL_CLOSED';\nexport const SET_SINGLESELECT_OPTIONS = 'SET_SINGLESELECT_OPTIONS';\nexport const SET_MULTISELECT_OPTIONS = 'SET_MULTISELECT_OPTIONS';\nexport const SET_OPTIONS_PANEL_CLOSED_NO_SELECTION = 'SET_OPTIONS_PANEL_CLOSED_NO_SELECTION';\nexport const SET_OPTIONS_PANEL_CLOSED_ONBLUR = 'SET_OPTIONS_PANEL_CLOSED_ONBLUR';\nexport const SET_NEXT_SELECTED_INDEX = 'SET_NEXT_SELECTED_INDEX';\nexport const SET_NEXT_SELECTED_INDEX_ALPHA_NUMERIC = 'SET_NEXT_SELECTED_INDEX_ALPHA_NUMERIC';\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","\"use strict\";\n/**\n * Turns a multiline string into a single line string, optionallly with or without spaces.\n * @param {String} multiLineString - If using an es6 template string be sure to tab out.\n * @param {Boolean} noSpaces - If you'd like there to be no spaces between say your HTML add this boolean.\n * @returns {String}\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction singleline(multiLineString, noSpaces) {\n    var delimiter = noSpaces ? '' : ' ';\n    return multiLineString.replace(/\\s\\s+/g, delimiter).trim();\n}\nexports.default = singleline;\n","const skipCircularReference = () => {\n    let cache: any[] = [];\n    return (key: string, value: any) => {\n        if (typeof value === 'object' && value !== null) {\n            // Circular reference found\n            if (cache.indexOf(value) !== -1) return;\n            cache.push(value);\n        }\n        // No circular reference found\n        return value;\n    };\n}\n\nexport function isEqual(a: any, b: any): boolean {\n    return JSON.stringify(a, skipCircularReference()) === JSON.stringify(b, skipCircularReference());\n}\n","import { IOption, IState } from '../types/';\n\nexport function nextValidIndex(\n  state: IState,\n  nextPotentialSelectionIndex: number,\n  mode: 'INCREMENT' | 'DECREMENT' = 'INCREMENT'\n): number {\n  const { options } = state;\n\n  const possibleOptionIndexes = options.reduce((acc: number[], option: IOption, index: number) => {\n    if (!option.optHeader) acc.push(index);\n    return acc;\n  }, []);\n\n  const indexNotFocusable =\n    possibleOptionIndexes.indexOf(nextPotentialSelectionIndex) === -1;\n\n  if (indexNotFocusable && mode === 'INCREMENT') {\n    const nextSelectionPossible =\n      options[nextPotentialSelectionIndex + 1] &&\n      !options[nextPotentialSelectionIndex + 1].optHeader;\n\n    return nextSelectionPossible\n      ? nextPotentialSelectionIndex + 1\n      : possibleOptionIndexes[0];\n  }\n\n  if (indexNotFocusable && mode === 'DECREMENT') {\n    const nextSelectionPossible =\n      options[nextPotentialSelectionIndex - 1] &&\n      !options[nextPotentialSelectionIndex - 1].optHeader;\n\n    return nextSelectionPossible\n      ? nextPotentialSelectionIndex - 1\n      : possibleOptionIndexes[possibleOptionIndexes.length - 1];\n  }\n\n  return nextPotentialSelectionIndex;\n}\n","import * as actionTypes from '../../constants/actionTypes';\nimport ReactResponsiveSelect from '../../ReactResponsiveSelect';\nimport { IOption, IState } from '../../types/';\n\ninterface IArgs {\n  event: KeyboardEvent;\n  state: IState;\n  RRSClassRef: ReactResponsiveSelect;\n}\n\nlet stringMatch:string = '';\nlet timeoutActive:boolean;\n\n/**\n * User types some keys in quick successsion whilst focused on a select - search for this combonation in their options\n */\nexport function handleAlphaNumerical({ event, state, RRSClassRef }: IArgs): void {\n  const { options, disabled } = state;\n\n  if (disabled) return;\n\n  // Accumulate users key presses\n  stringMatch = stringMatch + event.key;\n\n  if (!timeoutActive) {\n    timeoutActive = true;\n\n    // Eventually (after 250ms) check if the accumulation of their keypresses matches the text of an option\n    setTimeout(() => {\n      const foundIndexes:number[] = options.reduce((acc: number[], option: IOption, index: number) => {\n        if (\n          !option.optHeader\n          && !option.disabled\n          && option.text\n          && option.text.toLowerCase().indexOf(stringMatch) !== -1\n        ) {\n          acc.push(index);\n        }\n        return acc;\n      }, []);\n\n      if (foundIndexes.length > 0) {\n        RRSClassRef.updateState({\n          value: foundIndexes[0],\n          type: actionTypes.SET_NEXT_SELECTED_INDEX_ALPHA_NUMERIC,\n        });\n      }\n\n      // allow for the creation of a new search\n      timeoutActive = false;\n      stringMatch = '';\n    }, 250)\n  }\n}\n","export { multiSelectBroadcastChange } from './multiSelectBroadcastChange';\nexport { singleSelectBroadcastChange } from './singleSelectBroadcastChange';\n","import * as actionTypes from '../../constants/actionTypes';\n\nimport { IState } from '../../types/';\nimport ReactResponsiveSelect from '../../ReactResponsiveSelect';\nimport { containsClassName } from '../containsClassName';\n\ninterface TArgs {\n  event: any;\n  state: IState;\n  RRSClassRef: ReactResponsiveSelect;\n}\n\nexport function handleClick({ event, state, RRSClassRef }: TArgs): void {\n  const {\n    multiselect,\n    isOptionsPanelOpen,\n    isDragging,\n    disabled,\n    options,\n  } = state;\n\n  if (disabled) return;\n\n  if (isDragging === false && event && event != \"force\") {\n    /* Disallow natural event flow - don't allow blur to happen from button focus to selected option focus */\n    event.preventDefault();\n\n    if (event && containsClassName(event.target as HTMLElement, 'rrs__options')) {\n      return;\n    }\n\n    const value = parseFloat(\n      (event.target as any).getAttribute('data-key'),\n    );\n\n    if (options[value] && (options[value].disabled === true || options[value].optHeader === true)) {\n      return;\n    }\n\n    /* Select option index, if user selected option */\n    if (containsClassName(event.target as HTMLElement, 'rrs__option')) {\n      RRSClassRef.updateState({\n        type: multiselect\n          ? actionTypes.SET_MULTISELECT_OPTIONS\n          : actionTypes.SET_SINGLESELECT_OPTIONS,\n        value,\n      });\n\n      return;\n    }\n\n    /*\n      When the options panel is open, treat clicking the label/select button\n      or the background overlay on small screen as a 'no action'\n    */\n    if (\n      isOptionsPanelOpen &&\n      // button on desktop (rrs__label) or overlay on small screen (rrs)\n      (containsClassName(event.target as HTMLElement, 'rrs__label') ||\n        containsClassName(event.target as HTMLElement, 'rrs')\n        || containsClassName(event.target as HTMLElement, 'button_close'))\n    ) {\n      RRSClassRef.updateState(\n        {\n          type: actionTypes.SET_OPTIONS_PANEL_CLOSED_NO_SELECTION\n        },\n        () => RRSClassRef.focusButton(),\n      );\n\n      return;\n    }\n\n    /* Else user clicked close or open the options panel */\n    RRSClassRef.updateState(\n      {\n        type: isOptionsPanelOpen\n          ? actionTypes.SET_OPTIONS_PANEL_CLOSED\n          : actionTypes.SET_OPTIONS_PANEL_OPEN,\n      },\n      (newState: IState) => {\n        // After state update, check if focus should be moved to the button\n        if (newState.isOptionsPanelOpen === false) {\n          RRSClassRef.focusButton();\n        }\n      },\n    );\n  } else if (event == \"force\") {\n    if (\n      isOptionsPanelOpen) {\n      RRSClassRef.updateState(\n        {\n          type: actionTypes.SET_OPTIONS_PANEL_CLOSED_NO_SELECTION\n        },\n        () => RRSClassRef.focusButton(),\n      );\n\n      return;\n    }\n  }\n}\n","import * as actionTypes from '../../constants/actionTypes';\nimport ReactResponsiveSelect from '../../ReactResponsiveSelect';\nimport { IProps, IState } from '../../types/';\n\ninterface IArgs {\n  event: KeyboardEvent;\n  state: IState;\n  props: IProps;\n  RRSClassRef: ReactResponsiveSelect;\n}\n\nexport function handleEnterPressed({ event, state, props, RRSClassRef }: IArgs): void {\n  const {\n    disabled,\n    isOptionsPanelOpen,\n    multiselect,\n    nextPotentialSelectionIndex,\n    options,\n  } = state;\n\n  if (disabled) return;\n\n  const value = parseFloat((event.target as any).getAttribute('data-key'));\n\n  if (options[value] && (options[value].disabled === true || options[value].optHeader === true)) {\n    return;\n  }\n\n  if (multiselect) {\n    RRSClassRef.updateState({\n      type: actionTypes.SET_MULTISELECT_OPTIONS,\n      value: nextPotentialSelectionIndex,\n    });\n  } else {\n    RRSClassRef.updateState({\n      type: actionTypes.SET_SINGLESELECT_OPTIONS,\n      value: nextPotentialSelectionIndex,\n    });\n  }\n\n  if (isOptionsPanelOpen) {\n    event.stopPropagation(); // Do not submit form\n  } else {\n    // tslint:disable-next-line\n    props.onSubmit && props.onSubmit(event); // Submit the form\n  }\n}\n","import * as actionTypes from '../../constants/actionTypes';\nimport ReactResponsiveSelect from '../../ReactResponsiveSelect';\nimport { IState } from '../../types/';\nimport { getNextIndex } from '../getNextIndex';\n\ninterface TArgs {\n  state: IState;\n  type: 'INCREMENT' | 'DECREMENT';\n  RRSClassRef: ReactResponsiveSelect;\n}\n\nexport function handleKeyUpOrDownPressed({ state, RRSClassRef, type }: TArgs): void {\n  const { isOptionsPanelOpen, disabled } = state;\n\n  if (disabled) return;\n\n  RRSClassRef.updateState({\n    type: actionTypes.SET_NEXT_SELECTED_INDEX,\n    value: getNextIndex(type, state),\n  });\n\n  /* Open the options panel */\n  if (isOptionsPanelOpen === false) {\n    RRSClassRef.updateState({\n      type: actionTypes.SET_OPTIONS_PANEL_OPEN,\n    });\n  }\n}\n","export const initialState = {\n  // Constants\n  multiselect: false,\n\n  // Universal\n  name: '',\n  options: [],\n  isDragging: false,\n  isOptionsPanelOpen: false,\n  altered: false,\n  title: '',\n  backButtonName: '',\n\n  // Single select\n  singleSelectInitialIndex: 0,\n  singleSelectSelectedIndex: 0,\n  singleSelectSelectedOption: {},\n\n  // For determining highlighted item on Keyboard navigation\n  nextPotentialSelectionIndex: 0,\n\n  // Multi select\n  multiSelectInitialSelectedIndexes: [0],\n  multiSelectSelectedOptions: {\n    altered: false,\n    options: [],\n  },\n  multiSelectSelectedIndexes: [],\n};\n","import * as React from 'react';\nimport * as actionTypes from './constants/actionTypes';\n\nimport { IAction, IProps, IState } from './types/';\nimport { handleBlur, handleClick, handleKeyEvent, handleTouchMove, handleTouchStart } from './lib/eventHandlers';\nimport { multiSelectBroadcastChange, singleSelectBroadcastChange } from './lib/onChangeBroadcasters';\n\nimport { MultiSelect } from './components/MultiSelect';\nimport { SingleSelect } from './components/SingleSelect';\nimport { getCustomLabelText } from './lib/getCustomLabelText';\nimport { initialState } from './reducers/initialState';\nimport { isEqual } from './lib/isEqual';\nimport { reducer } from './reducers/reducer';\nimport singleline from 'singleline-next';\n\nexport default class ReactResponsiveSelect extends React.Component<IProps, IState> {\n  public selectBox: HTMLDivElement | null;\n  private reducer: (state: IState, action: IAction) => IState;\n  private firstLoad: boolean;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = initialState;\n    this.reducer = reducer;\n    this.firstLoad = true;\n  }\n\n  public componentDidMount(): void {\n    const {\n      options,\n      noSelectionLabel,\n      selectedValue,\n      selectedValues,\n      name,\n      multiselect,\n      disabled,\n      backButtonName,\n      title\n    } = this.props;\n\n    this.updateState({\n      type: actionTypes.INITIALISE,\n      value: {\n        options,\n        noSelectionLabel,\n        selectedValue,\n        selectedValues,\n        name,\n        multiselect,\n        disabled,\n        backButtonName,\n        title\n      },\n    });\n  }\n\n  /**\n   * Allow for the component to be updated/controlled via props after componentDidMount\n   */\n  public UNSAFE_componentWillReceiveProps(nextProps: IProps): void {\n    if (!isEqual(nextProps, this.props)) {\n      this.updateState({\n        type: actionTypes.UPDATE_VIA_PROPS,\n        value: { ...this.props, ...nextProps },\n      });\n    }\n  }\n\n  /* Broadcast change when there has been one */\n  public componentDidUpdate(prevProps: IProps, prevState: IState): boolean {\n    const { singleSelectSelectedOption, multiSelectSelectedOptions, multiselect, altered } = this.state;\n    const { onChange } = this.props;\n\n    if (this.firstLoad) {\n      this.firstLoad = false;\n      return false;\n    }\n\n    if (multiselect) {\n      multiSelectBroadcastChange(\n        multiSelectSelectedOptions.options,\n        Boolean(altered),\n        onChange,\n        prevState.multiSelectSelectedOptions.options,\n      );\n    } else {\n      singleSelectBroadcastChange(\n        singleSelectSelectedOption,\n        Boolean(altered),\n        onChange,\n        prevState.singleSelectSelectedOption,\n      );\n    }\n\n    return true;\n  }\n\n  public updateState(action: IAction, callback?: (nextState: IState) => any): void {\n    const { onListen, name } = this.props;\n    const nextState = this.reducer(this.state, action);\n\n    this.setState(nextState, () => {\n      if (callback) {\n        callback(nextState);\n      }\n    });\n\n    /* Allow user to listen to actions being fired */\n    if (onListen) {\n      const isOpen = [\n        actionTypes.SET_OPTIONS_PANEL_OPEN,\n        actionTypes.SET_NEXT_SELECTED_INDEX,\n        actionTypes.SET_NEXT_SELECTED_INDEX_ALPHA_NUMERIC,\n        actionTypes.SET_IS_DRAGGING,\n      ].some((actionType: string) => action.type === actionType);\n\n      onListen(isOpen, name, action.type);\n    }\n  }\n\n  public focusButton(): void {\n    const el: HTMLDivElement | null =\n      this.selectBox && this.selectBox.querySelector('.rrs__button');\n    // tslint:disable-next-line no-unused-expression\n    el && el.focus();\n  }\n\n  public onHandleKeyEvent = (e: any): void => {\n    handleKeyEvent({\n      event: e,\n      RRSClassRef: this,\n      state: this.state,\n      props: this.props,\n    });\n  }\n\n  public onHandleTouchStart = (): void => {\n    handleTouchStart({\n      RRSClassRef: this,\n      state: this.state,\n    });\n  }\n\n  public onHandleTouchMove = (): void => {\n    handleTouchMove({\n      RRSClassRef: this,\n      state: this.state,\n    });\n  }\n\n  public onHandleClick = (e: any): void => {\n    handleClick({\n      event: e,\n      RRSClassRef: this,\n      state: this.state,\n    });\n  }\n\n  public onHandleBlur = (): void => {\n    handleBlur({\n      RRSClassRef: this,\n      state: this.state,\n      props: this.props,\n    });\n  }\n\n  public render(): React.ReactNode {\n    const { prefix, caretIcon, disabled } = this.props;\n    const {\n      altered,\n      hasOptHeaders,\n      isOptionsPanelOpen,\n      isDragging,\n      noSelectionLabel,\n      multiSelectSelectedIndexes,\n      multiSelectSelectedOptions,\n      name,\n      nextPotentialSelectionIndex,\n      options,\n      backButtonName,\n      title,\n      singleSelectSelectedIndex,\n      singleSelectSelectedOption,\n      multiselect,\n    } = this.state;\n\n    const customLabelText = getCustomLabelText({\n      props: this.props,\n      state: this.state,\n    });\n\n    return (\n      <div\n        data-testid={name}\n        data-name={name}\n        className={singleline(`\n          rrs\n          ${isOptionsPanelOpen === true ? 'rrs--options-visible' : ''}\n          ${altered ? 'rrs--has-changed' : ''}\n          ${hasOptHeaders ? 'rrs--has-opt-headers' : ''}\n        `)}\n        ref={(r: HTMLDivElement): void => {\n          this.selectBox = r;\n        }}\n        tabIndex={-1}\n        onKeyDown={this.onHandleKeyEvent}\n        onTouchStart={this.onHandleTouchStart}\n        onTouchMove={this.onHandleTouchMove}\n        onTouchEnd={this.onHandleClick}\n        onMouseDown={this.onHandleClick}\n        onBlur={this.onHandleBlur}\n      >\n        {multiselect ? (\n          <MultiSelect\n            disabled={Boolean(disabled)}\n            isDragging={isDragging}\n            caretIcon={caretIcon}\n            customLabelText={customLabelText}\n            prefix={prefix || ''}\n            name={name}\n            multiSelectSelectedOptions={multiSelectSelectedOptions}\n            multiSelectSelectedIndexes={multiSelectSelectedIndexes}\n            nextPotentialSelectionIndex={nextPotentialSelectionIndex}\n            isOptionsPanelOpen={isOptionsPanelOpen}\n            options={options}\n            selectBoxRef={this.selectBox}\n          />\n        ) : (\n            <SingleSelect\n              noSelectionLabel={noSelectionLabel || ''}\n              disabled={Boolean(disabled)}\n              caretIcon={caretIcon}\n              prefix={prefix || ''}\n              name={name}\n              customLabelText={customLabelText}\n              singleSelectSelectedOption={singleSelectSelectedOption}\n              singleSelectSelectedIndex={singleSelectSelectedIndex}\n              nextPotentialSelectionIndex={nextPotentialSelectionIndex}\n              isOptionsPanelOpen={isOptionsPanelOpen}\n              options={options}\n              selectBoxRef={this.selectBox}\n              title={title}\n              onHandleClick={this.onHandleClick}\n              backButtonName={backButtonName}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nexport * from './types/';\n","/** @license React v16.8.5\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,aa=n?Symbol.for(\"react.memo\"):\n60115,ba=n?Symbol.for(\"react.lazy\"):60116,A=\"function\"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\nH.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}\nfunction da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}\nfunction fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function V(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B(\"321\"):void 0;return a}\nvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\nb,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=\nb){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.8.5\",\nunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","export { handleAlphaNumerical } from './handleAlphaNumerical';\nexport { handleBlur } from './handleBlur';\nexport { handleClick } from './handleClick';\nexport { handleEnterPressed } from './handleEnterPressed';\nexport { handleKeyEvent } from './handleKeyEvent';\nexport { handleKeyUpOrDownPressed } from './handleKeyUpOrDownPressed';\nexport { handleTouchMove } from './handleTouchMove';\nexport { handleTouchStart } from './handleTouchStart';\n","import * as actionTypes from '../../constants/actionTypes';\nimport ReactResponsiveSelect from '../../ReactResponsiveSelect';\nimport { IProps, IState } from '../../types/';\nimport {\n  multiSelectBroadcastChange,\n  singleSelectBroadcastChange,\n} from '../onChangeBroadcasters';\n\ninterface TArgs {\n  state: IState;\n  RRSClassRef: ReactResponsiveSelect;\n  props: IProps;\n}\n\nexport function handleBlur({ state, RRSClassRef, props }: TArgs): void {\n  const { onBlur, multiselect } = props;\n  const {\n    isOptionsPanelOpen,\n    disabled,\n    altered,\n    singleSelectSelectedOption,\n    multiSelectSelectedOptions,\n  } = state;\n\n  if (disabled) return;\n\n  const isOutsideSelectBox =\n    RRSClassRef.selectBox &&\n    !RRSClassRef.selectBox.contains(document.activeElement);\n\n  /* Handle click outside of selectbox */\n  if (isOptionsPanelOpen && isOutsideSelectBox) {\n    RRSClassRef.updateState({\n      type: actionTypes.SET_OPTIONS_PANEL_CLOSED_ONBLUR,\n    });\n  }\n\n  if (isOutsideSelectBox && onBlur) {\n    if (multiselect) {\n      multiSelectBroadcastChange(\n        multiSelectSelectedOptions.options,\n        Boolean(altered),\n        onBlur,\n      );\n    } else {\n      singleSelectBroadcastChange(\n        singleSelectSelectedOption,\n        Boolean(altered),\n        onBlur,\n      );\n    }\n  }\n}\n","import { IOutputMultiSelect, IOutputMultiSelectOption } from '../../types/';\nimport { isEqual } from '../../lib/isEqual';\n\nexport function multiSelectBroadcastChange(\n  currOptions: IOutputMultiSelectOption[],\n  altered: boolean,\n  fn?: (changes: IOutputMultiSelect) => void,\n  prevOptions?: IOutputMultiSelectOption[],\n): void {\n  if (!fn) return;\n\n  const shouldBroadcastChange = !prevOptions || !isEqual(prevOptions, currOptions);\n\n  if (shouldBroadcastChange) {\n    fn({\n      options: currOptions.map((currOption: IOutputMultiSelectOption) => ({\n        name: currOption.name || '',\n        text: currOption.text || '',\n        value: currOption.value || '',\n      })),\n      altered,\n    });\n  }\n}\n","import { IOutputSingleSelect } from '../../types/';\nimport { isEqual } from '../../lib/isEqual';\n\nexport function singleSelectBroadcastChange(\n  currValue: IOutputSingleSelect,\n  altered?: boolean,\n  fn?: (changes: IOutputSingleSelect) => void,\n  prevValue?: IOutputSingleSelect,\n): void {\n  if (!fn) return;\n\n  const shouldBroadcastChange = !isEqual(prevValue, currValue);\n\n  if (shouldBroadcastChange) {\n    fn({\n      name: currValue.name,\n      text: currValue.text,\n      value: currValue.value,\n      altered,\n    });\n  }\n}\n","export function containsClassName(element: HTMLElement, classNameStr: string): boolean {\n  return String(element.className).split(' ').indexOf(classNameStr) > -1;\n}\n","import * as actionTypes from '../../constants/actionTypes';\nimport { keyCodes } from '../../constants/keyCodes';\nimport ReactResponsiveSelect from '../../ReactResponsiveSelect';\nimport { IProps, IState } from '../../types/';\nimport { preventDefaultForKeyCodes } from '../preventDefaultForKeyCodes';\nimport { handleAlphaNumerical } from './handleAlphaNumerical';\nimport { handleClick } from './handleClick';\nimport { handleEnterPressed } from './handleEnterPressed';\nimport { handleKeyUpOrDownPressed } from './handleKeyUpOrDownPressed';\n\ninterface TArgs {\n  event: KeyboardEvent;\n  state: IState;\n  props: IProps;\n  RRSClassRef: ReactResponsiveSelect;\n}\n\nexport function handleKeyEvent({ event, state, props, RRSClassRef }: TArgs): void {\n  const { multiselect, isOptionsPanelOpen, disabled } = state;\n\n  if (disabled) return;\n\n  preventDefaultForKeyCodes(\n    [\n      keyCodes.ENTER,\n      keyCodes.SPACE,\n      keyCodes.ESCAPE,\n      keyCodes.UP,\n      keyCodes.DOWN,\n    ],\n    event,\n  );\n\n  /* handle alpha-nemeric key press */\n  if (/^[a-z0-9]+$/.test(event.key)) {\n    handleAlphaNumerical({ event, RRSClassRef, state });\n  }\n\n  switch (event.keyCode) {\n    case keyCodes.TAB:\n      /* Don't shift focus when the panel is open (unless it's a Multiselect) */\n      if (isOptionsPanelOpen) {\n        event.preventDefault();\n\n        /**\n         * Multiselect does not close on selection. Focus button to blur and close options panel on TAB\n         * TODO add a test for this\n         */\n        if (multiselect) {\n          RRSClassRef.updateState(\n            { type: actionTypes.SET_OPTIONS_PANEL_CLOSED },\n            () => RRSClassRef.focusButton(),\n          );\n        }\n      }\n      break;\n\n    case keyCodes.ENTER:\n      /* can close the panel when open and focussed\n       * can submit the form when closed and focussed */\n      handleEnterPressed({\n        RRSClassRef,\n        event,\n        props,\n        state,\n      });\n      break;\n\n    case keyCodes.SPACE:\n      /* close the panel and select option when open, or open the panel if closed */\n      if (isOptionsPanelOpen) {\n        handleClick({ event, state, RRSClassRef });\n      } else {\n        RRSClassRef.updateState({\n          type: actionTypes.SET_OPTIONS_PANEL_OPEN,\n        });\n      }\n      break;\n\n    case keyCodes.ESCAPE:\n      /* remove focus from the panel when focussed */\n      RRSClassRef.updateState(\n        { type: actionTypes.SET_OPTIONS_PANEL_CLOSED_NO_SELECTION },\n        () => RRSClassRef.focusButton(),\n      );\n      break;\n\n    case keyCodes.UP:\n      /* will open the options panel if closed\n       * will not decrement selection if options panel closed\n       * if panel open, will decrement up the options list */\n      handleKeyUpOrDownPressed({\n        RRSClassRef,\n        state,\n        type: 'DECREMENT',\n      });\n      break;\n\n    case keyCodes.DOWN:\n      /* will open the options panel if closed\n       * will not increment selection if options panel closed\n       * if panel open, will increment down the options list */\n      handleKeyUpOrDownPressed({\n        RRSClassRef,\n        state,\n        type: 'INCREMENT',\n      });\n      break;\n\n    default:\n      break;\n  }\n}\n","export const keyCodes = {\n  TAB: 9,\n  ENTER: 13,\n  SPACE: 32,\n  ESCAPE: 27,\n  UP: 38,\n  DOWN: 40,\n};\n","export function preventDefaultForKeyCodes(keyCodes: number[], e: KeyboardEvent): void {\n  keyCodes.forEach((keyCode: number) => {\n    if (keyCode === e.keyCode) {\n      e.preventDefault();\n    }\n  });\n}\n","import { IState } from '../types/';\nimport { nextValidIndex } from './nextValidIndex';\n\nexport function getNextIndex(mode: 'INCREMENT' | 'DECREMENT', state: IState): number {\n  const { isOptionsPanelOpen, nextPotentialSelectionIndex, options } = state;\n\n  switch (mode) {\n    case 'INCREMENT':\n      // Hold selection on current selected option when options panel first opens\n      if (isOptionsPanelOpen === false) {\n        return nextValidIndex(state, nextPotentialSelectionIndex, 'INCREMENT');\n      }\n\n      // User is at the end of the options so cycle back to start\n      if (nextPotentialSelectionIndex === options.length - 1) {\n        return nextValidIndex(state, 0, 'INCREMENT');\n      }\n\n      // Else increment\n      return nextValidIndex(state, nextPotentialSelectionIndex + 1, 'INCREMENT');\n\n    case 'DECREMENT':\n      // Hold selection on current selected option when options panel first opens\n      if (isOptionsPanelOpen === false) {\n        return nextValidIndex(state, nextPotentialSelectionIndex, 'DECREMENT');\n      }\n\n      // User is at start of the options so cycle around to end\n      if (nextPotentialSelectionIndex === 0) {\n        return nextValidIndex(state, options.length - 1, 'DECREMENT');\n      }\n\n      // Else decrement\n      return nextValidIndex(state, nextPotentialSelectionIndex - 1, 'DECREMENT');\n\n    default:\n      return nextValidIndex(state, 0, 'DECREMENT');\n  }\n}\n","import * as actionTypes from '../../constants/actionTypes';\nimport ReactResponsiveSelect from '../../ReactResponsiveSelect';\nimport { IState } from '../../types/';\n\ninterface TArgs {\n  state: IState;\n  RRSClassRef: ReactResponsiveSelect;\n}\n\nexport function handleTouchMove({ state, RRSClassRef }: TArgs): void {\n  /* if touchmove fired - User is dragging, this disables touchend/click */\n  const { isDragging, disabled } = state;\n\n  if (disabled) return;\n\n  if (!isDragging) {\n    RRSClassRef.updateState({\n      type: actionTypes.SET_IS_DRAGGING,\n      value: true,\n    });\n  }\n}\n","import * as actionTypes from '../../constants/actionTypes';\nimport ReactResponsiveSelect from '../../ReactResponsiveSelect';\nimport { IState } from '../../types/';\n\ninterface TArgs {\n  state: IState;\n  RRSClassRef: ReactResponsiveSelect;\n}\n\nexport function handleTouchStart({ state, RRSClassRef }: TArgs): void {\n  const { disabled } = state;\n\n  if (disabled) return;\n\n  /* initially it's assumed that the user is not dragging */\n  RRSClassRef.updateState({\n    type: actionTypes.SET_IS_DRAGGING,\n    value: false,\n  });\n}\n","import * as React from 'react';\nimport singleline from 'singleline-next';\nimport {\n  IOption,\n  IOutputMultiSelect,\n  IOutputMultiSelectOption,\n} from '../types/';\nimport { MultiSelectOption } from './MultiSelectOption';\n\ninterface TProps {\n  selectBoxRef: HTMLDivElement | null;\n  caretIcon: React.ReactNode;\n  customLabelText: React.ReactNode;\n  disabled: boolean;\n  isDragging: boolean;\n  isOptionsPanelOpen: boolean;\n  multiSelectSelectedIndexes: number[];\n  multiSelectSelectedOptions: IOutputMultiSelect;\n  name: string;\n  options: IOption[];\n  nextPotentialSelectionIndex: number;\n  prefix: string;\n}\n\nexport class MultiSelect extends React.Component<TProps> {\n  private optionsButton: React.RefObject<HTMLDivElement>;\n  private optionsContainer: React.RefObject<HTMLUListElement>;\n\n  constructor(props: TProps) {\n    super(props);\n    this.optionsButton = React.createRef();\n    this.optionsContainer = React.createRef();\n  }\n\n  public componentDidUpdate(prevProps: TProps): void {\n    /*\n      Focus selectBox button if options panel has just closed,\n      there has been an interaction or the value has changed\n    */\n    const { isOptionsPanelOpen, selectBoxRef } = this.props;\n\n    const optionsPanelJustClosed =\n      !isOptionsPanelOpen && prevProps.isOptionsPanelOpen;\n\n    if (\n      optionsPanelJustClosed &&\n      selectBoxRef &&\n      selectBoxRef.contains(document.activeElement)\n    ) {\n      // tslint:disable-next-line\n      this.optionsButton.current && this.optionsButton.current.focus();\n    }\n  }\n\n  public getAriaLabel(): string {\n    const { multiSelectSelectedOptions, prefix } = this.props;\n    const selectedOptionsLength = multiSelectSelectedOptions.options.length;\n\n    return singleline(`\n      Checkbox group ${prefix ? `${prefix} ` : ''} has\n      ${selectedOptionsLength} item${\n      selectedOptionsLength === 1 ? '' : 's'\n    } selected.\n      Selected option${selectedOptionsLength === 1 ? '' : 's'} ${\n      selectedOptionsLength === 1 ? 'is' : 'are'\n    }\n      ${multiSelectSelectedOptions.options\n        .map((option: IOutputMultiSelectOption): string => option.text || '')\n        .join(' and ')}\n    `);\n  }\n\n  public render(): React.ReactNode {\n    const {\n      caretIcon,\n      customLabelText,\n      disabled,\n      isOptionsPanelOpen,\n      multiSelectSelectedIndexes,\n      multiSelectSelectedOptions,\n      name,\n      options,\n      nextPotentialSelectionIndex,\n      prefix,\n    } = this.props;\n\n    let optHeaderLabel: string = '';\n\n    return (\n      <div>\n        <div\n          role=\"button\"\n          tabIndex={0}\n          aria-disabled={disabled}\n          aria-haspopup=\"true\"\n          aria-expanded={isOptionsPanelOpen}\n          aria-controls={`rrs-${name}-menu`}\n          ref={this.optionsButton}\n          className={singleline(`\n            rrs__button\n            ${disabled === true ? 'rrs__button--disabled' : ''}\n          `)}\n        >\n          {customLabelText && (\n            <div className=\"rrs__label\">\n              <span\n                aria-label={this.getAriaLabel()}\n                className=\"rrs__label__text\"\n                id={`rrs-${name}-label`}\n                data-testid={`rrs-label_${name}`}\n              >\n                {customLabelText}\n              </span>\n              {caretIcon && caretIcon}\n            </div>\n          )}\n\n          {!customLabelText && (\n            <div className=\"rrs__label\">\n              <span\n                aria-label={this.getAriaLabel()}\n                className=\"rrs__label__text\"\n                id={`rrs-${name}-label`}\n                data-testid={`rrs-label_${name}`}\n              >\n                <span className=\"rrs__multiselect-label\">\n                  <span className=\"rrs__multiselect-label__text\">\n                    {`${prefix ? `${prefix} ` : ''}\n                  ${\n                    multiSelectSelectedOptions.options.length > 0\n                      ? multiSelectSelectedOptions.options[0].text\n                      : ''\n                  }`}\n                  </span>\n                  {multiSelectSelectedOptions.options.length > 1 && (\n                    <span className=\"rrs__multiselect-label__badge\">\n                      {`+ ${multiSelectSelectedOptions.options.length - 1}`}\n                    </span>\n                  )}\n                </span>\n              </span>\n              {caretIcon && caretIcon}\n            </div>\n          )}\n\n          {name && (\n            <input\n              type=\"hidden\"\n              name={name}\n              data-testid={`rrs-input_${name}`}\n              value={[\n                multiSelectSelectedOptions.options.map(\n                  (v: IOutputMultiSelectOption) => v.value,\n                ),\n              ].join(',')}\n            />\n          )}\n        </div>\n\n        <ul\n          id={`rrs-${name}-menu`}\n          aria-labelledby={`rrs-${name}-label`}\n          role=\"menu\"\n          className=\"rrs__options\"\n          ref={this.optionsContainer}\n        >\n          {options.length > 0 &&\n            options.map((option: IOption, index: number) => {\n              if (option.optHeader) {\n                optHeaderLabel =\n                  option.text ||\n                  (option.markup &&\n                    (option.markup as HTMLElement).textContent) ||\n                  '';\n              }\n              return (\n                <MultiSelectOption\n                  key={index}\n                  name={name}\n                  optHeaderLabel={optHeaderLabel}\n                  optionsContainerRef={this.optionsContainer}\n                  index={index}\n                  option={option}\n                  isOptionsPanelOpen={isOptionsPanelOpen}\n                  multiSelectSelectedIndexes={multiSelectSelectedIndexes}\n                  nextPotentialSelectionIndex={nextPotentialSelectionIndex}\n                />\n              );\n            })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport singleline from 'singleline-next';\nimport { IOption } from '../types/';\n\ninterface TProps {\n  name: string;\n  index: number;\n  isOptionsPanelOpen: boolean;\n  nextPotentialSelectionIndex: number;\n  optionsContainerRef: React.RefObject<HTMLUListElement>;\n  optHeaderLabel: string;\n  multiSelectSelectedIndexes: number[];\n  option: IOption;\n}\n\nexport class MultiSelectOption extends React.Component<TProps> {\n  private optionRef: React.RefObject<HTMLLIElement>;\n  private scrollOffset: number;\n\n  constructor(props: TProps) {\n    super(props);\n    this.optionRef = React.createRef();\n  }\n\n  public getScrollOffset(): number {\n    const el = document.querySelector('.rrs__option--header');\n    return Math.ceil((el && el.getBoundingClientRect().height) || 0);\n  }\n\n  public componentDidUpdate(): void {\n    const {\n      index,\n      isOptionsPanelOpen,\n      nextPotentialSelectionIndex,\n      optionsContainerRef,\n      optHeaderLabel,\n    } = this.props;\n\n    if (index === nextPotentialSelectionIndex && isOptionsPanelOpen) {\n      if (this.optionRef.current && optionsContainerRef.current) {\n        this.optionRef.current.focus();\n\n        if (optHeaderLabel !== '') {\n          const scrollDiff = Math.ceil(\n            this.optionRef.current.getBoundingClientRect().top -\n              optionsContainerRef.current.getBoundingClientRect().top,\n          );\n\n          this.scrollOffset = this.scrollOffset || this.getScrollOffset();\n\n          if (scrollDiff < this.scrollOffset) {\n            optionsContainerRef.current.scroll(\n              0,\n              Math.floor(\n                optionsContainerRef.current.scrollTop - this.scrollOffset,\n              ),\n            );\n          }\n        }\n      }\n    }\n  }\n\n  public isDisabled(option: IOption): boolean {\n    return Boolean(option.disabled || option.optHeader);\n  }\n\n  public render(): React.ReactNode {\n    const {\n      index,\n      name,\n      multiSelectSelectedIndexes,\n      nextPotentialSelectionIndex,\n      option,\n      optHeaderLabel,\n    } = this.props;\n    const isSelected = multiSelectSelectedIndexes.some(\n      (i: number) => i === index,\n    );\n\n    return (\n      <li\n        role=\"checkbox\"\n        data-testid={`rrs-option_${name}_${index}`}\n        tabIndex={-1}\n        aria-checked={isSelected}\n        aria-label={`\n        ${option.text ||\n          (option.markup && (option.markup as HTMLElement).textContent)} ${\n          optHeaderLabel !== '' ? ` of ${optHeaderLabel}` : ''\n        }\n      `}\n        aria-live=\"assertive\"\n        aria-disabled={this.isDisabled(option) ? 'true' : 'false'}\n        data-key={index}\n        ref={this.optionRef}\n        className={singleline(`\n          rrs__option\n          ${isSelected ? 'rrs__option--selected' : ''}\n          ${\n            nextPotentialSelectionIndex === index\n              ? 'rrs__option--next-selection'\n              : ''\n          }\n          ${option.disabled === true ? 'rrs__option--disabled' : ''}\n          ${option.optHeader === true ? 'rrs__option--header' : ''}\n        `)}\n      >\n        {option.markup || option.text}\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { IOption, IOutputSingleSelect } from '../types/';\n\nimport { SingleSelectOption } from './SingleSelectOption';\nimport singleline from 'singleline-next';\n\ninterface TProps {\n  prefix: string;\n  singleSelectSelectedOption: IOutputSingleSelect;\n  name: string;\n  caretIcon: React.ReactNode;\n  singleSelectSelectedIndex: number;\n  noSelectionLabel: string;\n  isOptionsPanelOpen: boolean;\n  nextPotentialSelectionIndex: number;\n  selectBoxRef: HTMLDivElement | null;\n  customLabelText: React.ReactNode;\n  disabled: boolean;\n  options: IOption[];\n  title?: any;\n  backButtonName?: string;\n  onHandleClick?: any;\n}\n\nexport class SingleSelect extends React.Component<TProps> {\n  private optionsButton: React.RefObject<HTMLDivElement>;\n  private optionsContainer: React.RefObject<HTMLUListElement>;\n\n  constructor(props: TProps) {\n    super(props);\n    this.optionsButton = React.createRef();\n    this.optionsContainer = React.createRef();\n  }\n\n  public componentDidUpdate(prevProps: TProps): void {\n    /*\n      Focus selectBox button if options panel has just closed,\n      there has been an interaction,\n      or isOptionsPanelOpen and nextPotentialSelectionIndex === -1\n    */\n    const {\n      isOptionsPanelOpen,\n      nextPotentialSelectionIndex,\n      selectBoxRef,\n    } = this.props;\n\n    const optionsPanelJustClosed =\n      !isOptionsPanelOpen && prevProps.isOptionsPanelOpen;\n\n    if (this.optionsButton.current) {\n      if (\n        optionsPanelJustClosed &&\n        selectBoxRef &&\n        selectBoxRef.contains(document.activeElement)\n      ) {\n        this.optionsButton.current.focus();\n      }\n\n      if (isOptionsPanelOpen && nextPotentialSelectionIndex === -1) {\n        this.optionsButton.current.focus();\n      }\n    }\n  }\n\n  public getCustomLabel(): React.ReactNode {\n    const {\n      prefix,\n      name,\n      singleSelectSelectedOption,\n      caretIcon,\n      customLabelText,\n    } = this.props;\n\n    return (\n      <div className=\"rrs__label\">\n        <span\n          aria-label={`${prefix ? `${prefix} ` : ''}${\n            singleSelectSelectedOption.text\n            } selected`}\n          className=\"rrs__label__text\"\n          id={`rrs-${name}-label`}\n          data-testid={`rrs-label_${name}`}\n        >\n          {customLabelText}\n        </span>\n        {caretIcon && caretIcon}\n      </div>\n    );\n  }\n\n  public getDefaultLabel(): React.ReactNode {\n    const {\n      prefix,\n      singleSelectSelectedOption,\n      name,\n      caretIcon,\n      singleSelectSelectedIndex,\n      noSelectionLabel,\n    } = this.props;\n\n    if (singleSelectSelectedIndex === -1) {\n      return (\n        <div className=\"rrs__label\">\n          <span\n            aria-label={noSelectionLabel}\n            className=\"rrs__label__text\"\n            id={`rrs-${name}-label`}\n            data-testid={`rrs-label_${name}`}\n          >\n            {prefix && <span>{prefix}</span>}\n            {noSelectionLabel}\n          </span>\n          {caretIcon && caretIcon}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"rrs__label\">\n        <span\n          aria-label={`${prefix ? `${prefix} ` : ''}${\n            singleSelectSelectedOption.text\n            } selected`}\n          className=\"rrs__label__text\"\n          id={`rrs-${name}-label`}\n          data-testid={`rrs-label_${name}`}\n        >\n          {prefix && <span>{prefix}</span>}\n          {singleSelectSelectedOption.text ? (\n            singleSelectSelectedOption.text\n          ) : (\n              <div>&nbsp;</div>\n            )}\n        </span>\n        {caretIcon && caretIcon}\n      </div>\n    );\n  }\n\n  public render(): React.ReactNode {\n    const {\n      customLabelText,\n      title,\n      backButtonName,\n      disabled,\n      isOptionsPanelOpen,\n      name,\n      nextPotentialSelectionIndex,\n      options,\n      singleSelectSelectedIndex,\n      singleSelectSelectedOption,\n    } = this.props;\n\n    let optHeaderLabel: string = '';\n\n    console.log(this.props);\n\n    return (\n      <div>\n        <div\n          role=\"button\"\n          tabIndex={0}\n          aria-disabled={disabled}\n          aria-haspopup=\"true\"\n          aria-expanded={isOptionsPanelOpen}\n          aria-controls={`rrs-${name}-menu`}\n          ref={this.optionsButton}\n          className={singleline(`\n            rrs__button\n            ${disabled === true ? 'rrs__button--disabled' : ''}\n          `)}\n        >\n          {customLabelText ? this.getCustomLabel() : this.getDefaultLabel()}\n\n          {name && (\n            <input\n              type=\"hidden\"\n              name={name}\n              data-testid={`rrs-input_${name}`}\n              value={singleSelectSelectedOption.value}\n            />\n          )}\n        </div>\n\n        {isOptionsPanelOpen &&\n          <div id={`rss-${name}-title`} className=\"rrs_title d-flex d-md-none\">\n            <div className=\"rrs_title_item_button\">\n              <button type=\"button\" id={`rss-${name}-back`} onClick={this.props.onHandleClick} className=\"btn btn-link rrs_title_button button_close\">\n              <span><span className=\"arrow_button\">&#8249;</span> {backButtonName}</span></button>\n            </div>\n          </div>\n        }\n\n        <ul\n          id={`rrs-${name}-menu`}\n          aria-labelledby={`rrs-${name}-label`}\n          role=\"menu\"\n          className=\"rrs__options\"\n          ref={this.optionsContainer}\n        >\n          {isOptionsPanelOpen &&\n            <div id={`rss-${name}-subtitle`} className=\"rrs_subtitle d-flex d-md-none\">\n              <div className=\"rrs_title_item\">\n              <span id={`rss-${name}-title-mobile`} className=\"rrs_title_value\">{title}</span>\n              </div>\n            </div>\n          }\n\n          {options.length > 0 &&\n            options.map((option: IOption, index: number) => {\n              if (option.optHeader) {\n                optHeaderLabel =\n                  option.text ||\n                  (option.markup &&\n                    (option.markup as HTMLElement).textContent) ||\n                  '';\n              }\n              return (\n                <SingleSelectOption\n                  key={index}\n                  name={name}\n                  optHeaderLabel={optHeaderLabel}\n                  optionsContainerRef={this.optionsContainer}\n                  index={index}\n                  isOptionsPanelOpen={isOptionsPanelOpen}\n                  option={option}\n                  singleSelectSelectedIndex={singleSelectSelectedIndex}\n                  nextPotentialSelectionIndex={nextPotentialSelectionIndex}\n                />\n              );\n            })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { IOption } from '../types/';\nimport singleline from 'singleline-next';\n\ninterface TProps {\n  index: number;\n  name: string;\n  isOptionsPanelOpen: boolean;\n  optionsContainerRef: React.RefObject<HTMLUListElement>;\n  nextPotentialSelectionIndex: number;\n  option: IOption;\n  singleSelectSelectedIndex: number;\n  optHeaderLabel: string;\n}\n\nexport class SingleSelectOption extends React.Component<TProps> {\n  private optionRef: React.RefObject<HTMLLIElement>;\n  private scrollOffset: number;\n\n  constructor(props: TProps) {\n    super(props);\n    this.optionRef = React.createRef();\n  }\n\n  public getScrollOffset(): number {\n    const el = document.querySelector('.rrs__option--header');\n    return Math.ceil((el && el.getBoundingClientRect().height) || 0);\n  }\n\n  public componentDidUpdate(): void {\n    const {\n      index,\n      isOptionsPanelOpen,\n      nextPotentialSelectionIndex,\n      optionsContainerRef,\n      optHeaderLabel,\n    } = this.props;\n\n    if (index === nextPotentialSelectionIndex && isOptionsPanelOpen) {\n      if (this.optionRef.current && optionsContainerRef.current) {\n        this.optionRef.current.focus();\n\n        if (optHeaderLabel !== '') {\n          const scrollDiff = Math.ceil(\n            this.optionRef.current.getBoundingClientRect().top -\n              optionsContainerRef.current.getBoundingClientRect().top,\n          );\n\n          this.scrollOffset = this.scrollOffset || this.getScrollOffset();\n\n          if (scrollDiff < this.scrollOffset) {\n            optionsContainerRef.current.scroll(\n              0,\n              Math.floor(\n                optionsContainerRef.current.scrollTop - this.scrollOffset,\n              ),\n            );\n          }\n        }\n      }\n    }\n  }\n\n  public isDisabled(option: IOption): boolean {\n    return Boolean(option.disabled || option.optHeader);\n  }\n\n  public render(): React.ReactNode {\n    const {\n      index,\n      name,\n      nextPotentialSelectionIndex,\n      option,\n      singleSelectSelectedIndex,\n      optHeaderLabel,\n    } = this.props;\n\n    return (\n      <li\n        role=\"menuitem\"\n        data-testid={`rrs-option_${name}_${index}`}\n        tabIndex={-1}\n        aria-disabled={this.isDisabled(option) ? 'true' : 'false'}\n        aria-label={`\n          ${option.text ||\n            (option.markup && (option.markup as HTMLElement).textContent)} ${\n          optHeaderLabel !== '' ? ` of ${optHeaderLabel}` : ''\n        }\n        `}\n        data-key={index}\n        ref={this.optionRef}\n        className={singleline(`\n          rrs__option\n          ${singleSelectSelectedIndex === index ? 'rrs__option--selected' : ''}\n          ${\n            nextPotentialSelectionIndex === index\n              ? 'rrs__option--next-selection'\n              : ''\n          }\n          ${option.disabled === true ? 'rrs__option--disabled' : ''}\n          ${option.optHeader === true ? 'rrs__option--header' : ''}\n        `)}\n      >\n        {option.image &&\n          <img  src={option.image} />\n        }\n        <div className=\"rrs__option__container\">\n          <div className=\"rrs__option__subcontainer\">\n            <span dangerouslySetInnerHTML={{__html: option.text}}></span>\n            <span className=\"rrs_arrow\">&#8250;</span>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IProps, IState } from '../types/';\n\ninterface TArgs {\n  state: IState;\n  props: IProps;\n}\n\nexport function getCustomLabelText({ state, props }: TArgs): React.ReactNode {\n  const { multiselect, customLabelRenderer } = props;\n  const { multiSelectSelectedOptions, singleSelectSelectedOption } = state;\n\n  if (!customLabelRenderer) return false;\n\n  if (multiselect) {\n    return customLabelRenderer(multiSelectSelectedOptions);\n  }\n\n  return customLabelRenderer(singleSelectSelectedOption);\n}\n","import * as actionTypes from '../constants/actionTypes';\n\nimport { IAction, IOption, IState } from '../types/';\nimport {\n  addMultiSelectIndex,\n  addMultiSelectOption,\n  getInitialMultiSelectOption,\n  getMultiSelectInitialSelectedOptions,\n  getMultiSelectSelectedValueIndexes,\n  getSelectedValueIndex,\n  getSingleSelectSelectedOption,\n  mergeIsAlteredState,\n  removeMultiSelectIndex,\n  removeMultiSelectOption,\n  resetMultiSelectState,\n} from './lib';\n\nimport { nextValidIndex } from '../lib/nextValidIndex';\n\nexport function reducer(state: IState, action: IAction): IState {\n  switch (action.type) {\n    case actionTypes.UPDATE_VIA_PROPS:\n    case actionTypes.INITIALISE: {\n      const initialSelectedIndex = getSelectedValueIndex(action.value);\n      const initialSelectedIndexes = getMultiSelectSelectedValueIndexes(\n        action.value,\n        action.value.selectedValues,\n        action.value.noSelectionLabel,\n      );\n\n      return {\n        ...state,\n\n        hasOptHeaders: action.value.options.some(\n          (option: IOption) => option.optHeader === true,\n        ),\n\n        // Constants\n        multiselect: action.value.multiselect || false,\n\n        // Optional nothing selected label\n        noSelectionLabel: action.value.noSelectionLabel,\n\n        // Universal\n        name: action.value.name,\n        options: action.value.options,\n        altered: action.value.altered || false,\n        disabled: action.value.disabled || false,\n        backButtonName: action.value.backButtonName,\n        title: action.value.title,\n\n        // Single select\n        singleSelectInitialIndex: initialSelectedIndex,\n        singleSelectSelectedIndex: initialSelectedIndex,\n        singleSelectSelectedOption: getSingleSelectSelectedOption(\n          action.value,\n          initialSelectedIndex,\n        ),\n\n        // For determining highlighted item on Keyboard navigation and selection via UPDATE_VIA_PROPS\n        // If UPDATE_VIA_PROPS and state exists, re-select nextPotentialSelectionIndex from state\n        nextPotentialSelectionIndex: state.nextPotentialSelectionIndex\n          ? state.nextPotentialSelectionIndex\n          : initialSelectedIndex,\n\n        // Multi select\n        multiSelectInitialSelectedIndexes: initialSelectedIndexes,\n        multiSelectSelectedIndexes: initialSelectedIndexes,\n        multiSelectSelectedOptions: {\n          options: getMultiSelectInitialSelectedOptions(\n            action.value,\n            action.value.selectedValues,\n          ),\n        },\n      };\n    }\n\n    case actionTypes.SET_IS_DRAGGING:\n      return {\n        ...state,\n        isDragging: action.value,\n      };\n\n    case actionTypes.SET_OPTIONS_PANEL_OPEN: {\n      const newState = {\n        ...state,\n        isOptionsPanelOpen: true,\n\n        // For determining highlighted item on Keyboard navigation\n        nextPotentialSelectionIndex: ((): number => {\n          if (state.multiselect) {\n            return state.multiSelectSelectedIndexes.length\n              ? nextValidIndex(state, state.multiSelectSelectedIndexes[0])\n              : nextValidIndex(state, 0);\n          }\n          return nextValidIndex(state, state.nextPotentialSelectionIndex);\n        })(),\n\n        singleSelectSelectedOption: getSingleSelectSelectedOption(\n          state,\n          state.nextPotentialSelectionIndex,\n        ),\n      };\n\n      return mergeIsAlteredState(newState);\n    }\n\n    case actionTypes.SET_OPTIONS_PANEL_CLOSED: {\n      const newState = {\n        ...state,\n        isOptionsPanelOpen: false,\n        singleSelectSelectedIndex: state.nextPotentialSelectionIndex,\n        singleSelectSelectedOption: getSingleSelectSelectedOption(\n          state,\n          state.nextPotentialSelectionIndex,\n        ),\n      };\n      return mergeIsAlteredState(newState);\n    }\n\n    case actionTypes.SET_OPTIONS_PANEL_CLOSED_NO_SELECTION:\n    case actionTypes.SET_OPTIONS_PANEL_CLOSED_ONBLUR:\n      return {\n        ...state,\n        isOptionsPanelOpen: false,\n      };\n\n    case actionTypes.SET_NEXT_SELECTED_INDEX:\n      return {\n        ...state,\n        nextPotentialSelectionIndex: action.value,\n      };\n\n    case actionTypes.SET_NEXT_SELECTED_INDEX_ALPHA_NUMERIC:\n      return {\n        ...state,\n        isOptionsPanelOpen: true,\n        nextPotentialSelectionIndex: action.value,\n      };\n\n    case actionTypes.SET_SINGLESELECT_OPTIONS: {\n      const nextState = {\n        ...state,\n        nextPotentialSelectionIndex: action.value,\n        singleSelectSelectedIndex: action.value,\n        isOptionsPanelOpen: false,\n        singleSelectSelectedOption: getSingleSelectSelectedOption(\n          state,\n          action.value,\n        ),\n      };\n\n      // Set altered state\n      return mergeIsAlteredState(nextState);\n    }\n\n    case actionTypes.SET_MULTISELECT_OPTIONS: {\n      if (!state.noSelectionLabel) {\n        const isFirstOptionInListSelected =\n          state.multiSelectSelectedIndexes[0] === 0 &&\n          state.multiSelectSelectedIndexes.length === 1;\n\n        // If anything selected and first option was requested, deselect all, then select first option\n        const shouldDeselectAllAndSelectFirstOption =\n          state.multiSelectSelectedIndexes.length > 0 &&\n          !isFirstOptionInListSelected &&\n          action.value === 0 &&\n          !state.noSelectionLabel;\n\n        // Deselect first option when any other value is requested\n        const shouldDeselectFirstOptionAndSelectRequestedOption =\n          isFirstOptionInListSelected && action.value !== 0;\n\n        // If any thing selected and first option was requested, deselect all, and return first option\n        if (shouldDeselectAllAndSelectFirstOption) {\n          return mergeIsAlteredState(getInitialMultiSelectOption(state));\n        }\n\n        // Deselect first option when first option selected and another option is requested\n        if (shouldDeselectFirstOptionAndSelectRequestedOption) {\n          // eslint-disable-next-line no-param-reassign\n          state = resetMultiSelectState(state);\n        }\n      }\n\n      // Remove noSelectionLabel from selected options if something is selected\n      if (\n        state.noSelectionLabel &&\n        state.multiSelectSelectedOptions.options[0].text ===\n          state.noSelectionLabel\n      ) {\n        // eslint-disable-next-line no-param-reassign\n        state.multiSelectSelectedOptions.options = [];\n      }\n\n      // With optHeader, action.value can go out of bounds - check and adjust the value of value when requried\n      const actionOptionIndexAdjusted = nextValidIndex(state, action.value);\n\n      // Find index of requested option\n      const indexLocation = state.multiSelectSelectedIndexes.indexOf(\n        actionOptionIndexAdjusted,\n      );\n\n      // If requested item does not exist, add it. Else remove it\n      let nextState = {\n        ...state,\n        nextPotentialSelectionIndex: actionOptionIndexAdjusted,\n        multiSelectSelectedIndexes:\n          indexLocation === -1\n            ? addMultiSelectIndex(state, actionOptionIndexAdjusted)\n            : removeMultiSelectIndex(state, indexLocation),\n        multiSelectSelectedOptions:\n          indexLocation === -1\n            ? addMultiSelectOption(state, actionOptionIndexAdjusted)\n            : removeMultiSelectOption(state, indexLocation),\n      };\n\n      if (nextState.multiSelectSelectedOptions.options.length === 0) {\n        // Reset to noSelectionLabel if user has deselected all items and has set a `noSelectionLabel` prop\n        if (state.noSelectionLabel) {\n          nextState = {\n            ...nextState,\n            nextPotentialSelectionIndex: state.hasOptHeaders\n              ? nextValidIndex(state, -1)\n              : -1,\n            multiSelectSelectedOptions: {\n              options: getMultiSelectInitialSelectedOptions(state),\n            },\n          };\n        } else if (!state.noSelectionLabel) {\n          // Select first option if user has deselected all items\n          nextState = getInitialMultiSelectOption(state);\n        }\n      }\n      // Set altered state\n      return mergeIsAlteredState(nextState);\n    }\n    default:\n      return state;\n  }\n}\n","export { addMultiSelectIndex } from './addMultiSelectIndex';\nexport { addMultiSelectOption } from './addMultiSelectOption';\nexport { getInitialMultiSelectOption } from './getInitialMultiSelectOption';\nexport { getMultiSelectInitialSelectedOptions } from './getMultiSelectInitialSelectedOptions';\nexport { getMultiSelectSelectedValueIndexes } from './getMultiSelectSelectedValueIndexes';\nexport { getSelectedValueIndex } from './getSelectedValueIndex';\nexport { getSingleSelectSelectedOption } from './getSingleSelectSelectedOption';\nexport { mergeIsAlteredState } from './mergeIsAlteredState';\nexport { removeMultiSelectIndex } from './removeMultiSelectIndex';\nexport { removeMultiSelectOption } from './removeMultiSelectOption';\nexport { resetMultiSelectState } from './resetMultiSelectState';\n","import { IState } from '../../types/';\n\nexport function addMultiSelectIndex(state: IState, index: number): number[] {\n  return [...state.multiSelectSelectedIndexes, index];\n}\n","import { IOutputMultiSelect, IState } from '../../types/';\n\nexport function addMultiSelectOption(state: IState, index: number): IOutputMultiSelect {\n  return {\n    options: [\n      ...state.multiSelectSelectedOptions.options,\n      {\n        name: state.name,\n        text: state.options[index].text,\n        value: state.options[index].value,\n      },\n    ],\n  };\n}\n","import { IOption, IState } from '../../types/';\n\ninterface IOutputMultiSelectOptionSansDisabled {\n  value?: string;\n  text?: string;\n  name?: string;\n}\n\ninterface IFindClosestValidOptionOutput {\n  option: IOutputMultiSelectOptionSansDisabled;\n  index: number;\n}\n\nfunction findClosestValidOption(state: IState): { option: IOutputMultiSelectOptionSansDisabled; index: number } {\n  const { options, name } = state;\n  const possibleOptions = options.reduce(\n    (acc: IFindClosestValidOptionOutput[], option: IOption, index: number) => {\n      if (!option.optHeader) {\n        acc.push({\n          option: { value: option.value, text: option.text, name },\n          index,\n        });\n      }\n      return acc;\n    }, []);\n\n  // Note: Will fail if there is only one option, and it is an optHeader\n  return possibleOptions[0];\n}\n\nexport function getInitialMultiSelectOption(state: IState): IState {\n  //: { option: IOutputMultiSelectOptionSansDisabled; index: number; }\n  const { option, index } = findClosestValidOption(state);\n\n  return {\n    ...state,\n    multiSelectSelectedIndexes: [index],\n    multiSelectSelectedOptions: { options: [{ ...option }] },\n    nextPotentialSelectionIndex: index,\n  };\n}\n","import { IOption, IOutputMultiSelectOption, IState } from '../../types/';\n\n/* Use existing state.singleSelectSelectedOption, or first possible option to use as a selection */\nfunction findClosestValidOption(state: IState): IOutputMultiSelectOption {\n  const { multiSelectSelectedOptions, options, name } = state;\n\n  if (multiSelectSelectedOptions && multiSelectSelectedOptions.options.length) {\n    return multiSelectSelectedOptions.options[0];\n  }\n\n  const possibleOptions = options.reduce((acc: IOption[], option: IOption) => {\n    if (!option.optHeader) acc.push(option);\n    return acc;\n  }, []);\n\n  // Note: Will fail if no non-optHeader options exist\n  return {\n    name,\n    text: possibleOptions[0].text,\n    value: possibleOptions[0].value,\n  };\n}\n\nexport function getMultiSelectInitialSelectedOptions(state: IState, selectedValues?: string[]): IOutputMultiSelectOption[] {\n  const { noSelectionLabel, options, name } = state;\n\n  let selectedOptionsToReturn;\n\n  if (!noSelectionLabel ) {\n    // Preselect the first item in the list when if no noSelectionLabel exists\n    if (selectedValues && selectedValues.length > 0) {\n      // Grab selected options by matching option.value with selectedValues, and merge in `name`\n      selectedOptionsToReturn = options\n        .filter((option: IOption) => selectedValues.some((selectedValue: string) => selectedValue === option.value))\n        .map((option: IOption) => ({ name, ...option }));\n    \n    } else {\n      // Grab first option and merge in `name`\n      const option = options[0] && options[0].optHeader\n        ? findClosestValidOption(state)\n        : options[0];\n\n      selectedOptionsToReturn = [{\n        name,\n        text: option.text,\n        value: option.value,\n      }];\n    }\n\n    return selectedOptionsToReturn;\n  }\n\n  selectedOptionsToReturn = selectedValues && selectedValues.length > 0\n    ? options.reduce((acc: any[], option: IOption) => {\n        if (selectedValues.some((selectedValue: string) => selectedValue === option.value)) {\n          acc.push({ ...option });\n        }\n        return acc;\n      }, [])\n    : [{\n          name: state.name,\n          text: noSelectionLabel,\n          value: 'null',\n      }];\n\n  return selectedOptionsToReturn;\n}\n","import { nextValidIndex } from '../../lib/nextValidIndex';\nimport { IState } from '../../types/';\n\nexport function getMultiSelectSelectedValueIndexes(\n  state: IState,\n  selectedValues: string[] = [],\n  noSelectionLabel?: string,\n): number[] {\n  const { options } = state;\n  const emptyResult = noSelectionLabel ? [] : [nextValidIndex(state, 0)];\n\n  /* return the index of the found item, if found */\n  const result = options.reduce((acc: any, option: any, value: number) => {\n      if (selectedValues.some((selected: string) => option.value === selected)) {\n        acc.push(value);\n      }\n      return acc;\n    }, []);\n\n  /* If something found return that, else return the first item */\n  return result.length > 0 ? result : emptyResult;\n}\n","import { IOption } from '../../types/';\n\ninterface TArgs {\n  options: IOption[];\n  selectedValue: string;\n  noSelectionLabel: string;\n}\n\nexport function getSelectedValueIndex({ options, selectedValue, noSelectionLabel }: TArgs): number {\n  const index = selectedValue\n    ? options.map((option: IOption) => option.value).indexOf(selectedValue)\n    : -1;\n\n  // Allow a negative index if user wants to display a noSelectionLabel\n  // Keyboard will not focus on an option when first opened\n\n  // Select the first option when panel opens if !noSelectionLabel\n  return index > -1 || noSelectionLabel ? index : 0;\n}\n","import { IOption, IState } from '../../types/';\n\n/*\n  use existing state.singleSelectSelectedOption, or first possible option to use as a selection\n*/\nfunction closestValidOption(state: IState): IOption & { name?: string; } {\n  if (state.singleSelectSelectedOption) {\n    return state.singleSelectSelectedOption;\n  }\n\n  const possibleOptions: IOption[] = state.options.reduce((acc: IOption[], option: IOption): IOption[] => {\n    if (!option.optHeader) {\n      acc.push(option);\n    }\n    return acc;\n  }, []);\n\n  // Note: Will fail if no non-optHeader options exist\n  return {\n    ...possibleOptions[0],\n    name: state.name,\n  };\n}\n\nexport function getSingleSelectSelectedOption(state: IState, initialSelectedIndex: number = 0): IOption & { name?: string; } {\n  const selectionIndex = (initialSelectedIndex === -1 && !state.noSelectionLabel)\n    ? 0\n    : initialSelectedIndex;\n\n  // if optHeader, then use existing state.singleSelectSelectedOption, or findClosestValidOption\n  if (\n    state.options[selectionIndex] &&\n    state.options[selectionIndex].optHeader\n  ) {\n    return closestValidOption(state);\n  }\n\n  // Has selection, has no selection use default noSelectionLabel (if exists) and nullify value\n  if (!state.noSelectionLabel) {\n    // Preselect the first item in the list when if no noSelectionLabel exists\n    return {\n      name: state.name,\n      ...state.options[selectionIndex],\n    };\n  }\n\n  return initialSelectedIndex > -1\n    ? {\n        name: state.name,\n        ...state.options[initialSelectedIndex],\n      }\n    : {\n        name: state.name,\n        text: state.noSelectionLabel,\n        value: 'null',\n      };\n}\n","import { IState } from '../../types/';\n\nexport function isAltered(newState: IState): boolean {\n  return !newState.multiselect\n    ? newState.singleSelectSelectedIndex !== newState.singleSelectInitialIndex\n    : !(JSON.stringify(newState.multiSelectInitialSelectedIndexes) === JSON.stringify(newState.multiSelectSelectedIndexes));\n}\n\nexport function mergeIsAlteredState(newState: IState): IState {\n  return {\n    ...newState,\n    altered: isAltered(newState),\n  };\n}\n","import { IState } from '../../types/';\n\nexport function removeMultiSelectIndex(\n  state: IState,\n  indexLocation: number,\n): number[] {\n  return [\n    ...state.multiSelectSelectedIndexes.slice(0, indexLocation),\n    ...state.multiSelectSelectedIndexes.slice(indexLocation + 1),\n  ];\n}\n","import { IOutputMultiSelectOption, IState } from '../../types/';\n\nexport function removeMultiSelectOption(\n  state: IState,\n  indexLocation: number,\n): {\n  options: IOutputMultiSelectOption[];\n} {\n  return {\n    options: [\n      ...state.multiSelectSelectedOptions.options.slice(0, indexLocation),\n      ...state.multiSelectSelectedOptions.options.slice(indexLocation + 1),\n    ],\n  };\n}\n","import { IState } from '../../types/';\nimport { initialState } from '../initialState';\n\nexport function resetMultiSelectState(state: IState): IState {\n  return {\n    // reset multiSelect state\n    ...state,\n    multiSelectSelectedIndexes: [...initialState.multiSelectSelectedIndexes],\n    multiSelectSelectedOptions: { ...initialState.multiSelectSelectedOptions },\n  };\n}\n"],"sourceRoot":""}